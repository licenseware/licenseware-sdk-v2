# Default values for <CHARTNAME>.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

metadata:
  env: dev
  tier: backend
  owner: licenseware

config:
  appHost: ""
  appId: ""
  appUriPrefix: ""  # e.g. /ifmp
  healthCheckUri: ""  # e.g. /ifmp/swagger.json

  webCommand: ""

  storage:
    claimName: ""  # default: chart name
    enabled: true
    size: "5Gi"
    accessMode: ReadWriteMany
    storageClassName: efs-sc

  mongo:
    databaseName: ""

  identity:
    user: ""

  fileUploadPath: /tmp/lware
  
  authService:
    url: ""

  registryService:
    url: ""

  redis:
    host: ""
    port: 6379

secret:
  identity:
    password: ""
  mongo:
    connectionString: ""
  redis:
    password: ""

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 5000
  protocol: TCP

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 1000m
  #   memory: 1Gi
  # requests:
  #   cpu: 200m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 70

nodeSelector: {}

tolerations: []

affinity: {}

probes:
  livenessProbe: {}
  readinessProbe: {}
